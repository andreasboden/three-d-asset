name: build

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        rust: [ stable, nightly ]

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features gltf

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features obj

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features png

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features hdr

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features vol

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features http

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build
        run: wasm-pack build --target web --out-name web --dev --all-features

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
